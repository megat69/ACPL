%YAML 1.2
---
# See http://www.sublimetext.com/docs/3/syntax.html
name: ACPL
file_extensions: [acpl, ACPL, ac-pl]
scope: text.plain.acpl

contexts:
  main:
    - match: '\{[a-zA-Z ]*\}*'
      scope: entity.name.tag

    - match: '\\{0}\s*(#\s*\w+)'
      captures:
        1: entity.name.tag
      push:
        - match: '\w+'
          scope: entity.name.tag
        - match: '\(*'
          scope: entity.name.tag
        - match: '\)*'
          scope: entity.name.tag
        - match: '=*\?*\.*\{*\}*\!*\:*\;*\\*\/*\+*\**\-*\,*'
          scope: entity.name.tag
        - match: '$'
          pop: true

    - match: '\s*(//\s*\w+)'
      captures:
        1: entity.name.tag
      push:
        - match: '\w+'
          scope: entity.name.tag
        - match: '\(*'
          scope: entity.name.tag
        - match: '\)*'
          scope: entity.name.tag
        - match: '=*\?*\.*\{*\}*\!*\:*\;*\\*\/*\+*\**\-*'
          scope: entity.name.tag
        - match: '$'
          pop: true

    - match: '\s*(print)'
      captures:
        1: entity.name.function.acpl
        2: string.other
        3: string.quoted.double
        4: entity.name.tag
      push:
        - match: '\{[a-zA-Z ]*\}'
          scope: entity.name.tag
        - match: '\s*(print)'
          scope: entity.name.function.acpl
        - match: '\('
          scope: entity.name.tag
        - match: '[a-zA-Z0-9\{\} \,\!\*\+\?\.\;\.\\]*'
          scope: string.quoted.double
        - match: '\)'
          scope: entity.name.tag
          pop: true

    - match: '\([a-zA-Z0-9\{\} \,\!\*\+\?\.\;\.\\]*\)'
      scope: string.quoted.double

    - match: '\)'
      scope: entity.name.tag

    - match: '\('
      scope: entity.name.tag

    - match: '[0-9]*'
      scope: keyword.declaration.enum

    - match: '[\+\-\*]*'
      scope: entity.name.interface

    - match: 'math'
      scope: entity.name.impl

    - match: '(float|int|str|string|bool|boolean)'
      scope: entity.name.constant

    - match: '\s*(input)[a-zA-Z0-9\{\} \,\!\*\+\?\.\;\.\\]*'
      captures:
        1: entity.name.function.acpl
        2: string.other
        3: string.quoted.double
        4: entity.name.tag
      push:
        - match: '\s*(input)'
          scope: entity.name.function.acpl
        - match: '\('
          scope: entity.name.tag
        - match: '[a-zA-Z0-9\{\} \,\!\*\+\?\.\;\.\\]*'
          scope: string.quoted.double
        - match: '\{[a-zA-Z ]*\}*'
          scope: entity.name.tag
        - match: '\)'
          scope: entity.name.tag
          pop: true

    - match: '='
      scope: entity.name.tag

    - match: 'pause'
      scope: entity.name.function.acpl
